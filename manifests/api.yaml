apiVersion: v1
kind: Service
metadata:
  name: movies-api
  labels:
    app.kubernetes.io/instance: movies
    app.kubernetes.io/version: "1.0.0"
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: movies-api
    app.kubernetes.io/instance: movies
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: movies-api
  labels:
    
    app.kubernetes.io/instance: movies
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: movies-api
      app.kubernetes.io/instance: movies
  template:
    metadata:
      labels:
        app.kubernetes.io/name: movies-api
        app.kubernetes.io/instance: movies
        app.kubernetes.io/component: api
    spec:
      terminationGracePeriodSeconds: 0
      initContainers:
        - name: load
          image: okteto/movies-api
          command:
            - yarn
            - load
          imagePullPolicy: Always
          env:
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: movies-mongodb
                  key: mongodb-password
            - name: MONGODB_USERNAME
              value: okteto
            - name: MONGODB_DATABASE
              value: okteto
            - name: MONGODB_HOST
              value: movies-mongodb
          resources:
            limits:
              cpu: 250m
              memory: 128Mi
      containers:
        - name: api
          image: okteto/movies-api
          imagePullPolicy: Always
          env:
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: movies-mongodb
                  key: mongodb-password
            - name: MONGODB_USERNAME
              value: okteto
            - name: MONGODB_DATABASE
              value: okteto
            - name: MONGODB_HOST
              value: movies-mongodb
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/healthz
              port: 8080
          readinessProbe:
            httpGet:
              path: /api/healthz
              port: 8080
          resources:
            limits:
              cpu: 250m
              memory: 128Mi